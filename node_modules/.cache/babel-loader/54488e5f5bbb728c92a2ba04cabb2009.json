{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\PokeStore\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import axios from'axios';var api=axios.create({baseURL:'https://pokeapi.co/api/v2/pokemon/'});export default{getType:function getType(endpoint,type){return api.get(\"\".concat(endpoint,\"/\").concat(type));},getItem:function getItem(endpoint,id){return api.get(\"\".concat(endpoint,\"/\").concat(id));},get:function get(urls){return axios.all(_toConsumableArray(urls.map(function(url){return axios.get(url);})));},getItems:function getItems(endpoint){var page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return api.get(endpoint,{params:{offset:(page-1)*9,limit:9}});}};","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/PokeStore/src/services/Api.js"],"names":["axios","api","create","baseURL","getType","endpoint","type","get","getItem","id","urls","all","map","url","getItems","page","params","offset","limit"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CACvBC,OAAO,CAAE,oCADc,CAAb,CAAZ,CAIA,cAAe,CACbC,OAAO,CAAE,iBAACC,QAAD,CAAWC,IAAX,QAAoBL,CAAAA,GAAG,CAACM,GAAJ,WAAWF,QAAX,aAAuBC,IAAvB,EAApB,EADI,CAEbE,OAAO,CAAE,iBAACH,QAAD,CAAWI,EAAX,QAAkBR,CAAAA,GAAG,CAACM,GAAJ,WAAWF,QAAX,aAAuBI,EAAvB,EAAlB,EAFI,CAGbF,GAAG,CAAE,aAACG,IAAD,CAAU,CACb,MAAOV,CAAAA,KAAK,CAACW,GAAN,oBAAcD,IAAI,CAACE,GAAL,CAAS,SAACC,GAAD,QAASb,CAAAA,KAAK,CAACO,GAAN,CAAUM,GAAV,CAAT,EAAT,CAAd,EAAP,CACD,CALY,CAMbC,QAAQ,CAAE,kBAACT,QAAD,CAAwB,IAAbU,CAAAA,IAAa,2DAAN,CAAM,CAChC,MAAOd,CAAAA,GAAG,CAACM,GAAJ,CAAQF,QAAR,CAAkB,CAAEW,MAAM,CAAE,CAAEC,MAAM,CAAE,CAACF,IAAI,CAAG,CAAR,EAAa,CAAvB,CAA0BG,KAAK,CAAE,CAAjC,CAAV,CAAlB,CAAP,CACD,CARY,CAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://pokeapi.co/api/v2/pokemon/',\r\n});\r\n\r\nexport default {\r\n  getType: (endpoint, type) => api.get(`${endpoint}/${type}`),\r\n  getItem: (endpoint, id) => api.get(`${endpoint}/${id}`),\r\n  get: (urls) => {\r\n    return axios.all([...urls.map((url) => axios.get(url))]);\r\n  },\r\n  getItems: (endpoint, page = 1) => {\r\n    return api.get(endpoint, { params: { offset: (page - 1) * 9, limit: 9 } });\r\n  },\r\n};"]},"metadata":{},"sourceType":"module"}