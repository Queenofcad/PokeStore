{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\gamagit-Copia\\\\src\\\\pages\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FaSpinner } from 'react-icons/fa';\nimport swal from '@sweetalert/with-react';\nimport { Container, Loading, Pagination } from './style';\nimport { getPokemonsOfType } from '../../services/PokemonService';\nimport Cart from '../components/Cart';\nimport ProductList from '../components/';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemons: [],\n      pokemonsView: [],\n      currentPage: 1,\n      pokemonsPerPage: 6,\n      searchedPokemon: null,\n      loading: true\n    };\n\n    this.handleNextPage = () => {\n      const {\n        currentPage,\n        pokemons,\n        pokemonsPerPage\n      } = this.state;\n      const lastPage = Math.ceil(pokemons.length / pokemonsPerPage);\n      const newPage = currentPage === lastPage ? lastPage : currentPage + 1;\n      this.setNewPagination(newPage);\n    };\n\n    this.handlePreviousPage = () => {\n      const {\n        currentPage\n      } = this.state;\n      const newPage = currentPage === 1 ? 1 : currentPage - 1;\n      this.setNewPagination(newPage);\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemons,\n      currentPage,\n      pokemonsPerPage\n    } = this.state;\n    const {\n      theme\n    } = this.props;\n    let items = JSON.parse(sessionStorage.getItem('pokemons'));\n\n    if (!items) {\n      try {\n        items = await getPokemonsOfType(theme.theme);\n      } catch (error) {\n        swal({\n          text: 'Não foi possível capturar todos os Pokemon, por favor, atualize a página e tente novamente',\n          buttons: {\n            cancel: 'Close'\n          }\n        });\n        return;\n      }\n    }\n\n    const indexOfLastPokemon = currentPage * pokemonsPerPage;\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n    const pokemonsView = items.slice(indexOfFirstPokemon, indexOfLastPokemon);\n    this.setState({\n      pokemons: [...pokemons, ...items],\n      loading: false,\n      pokemonsView: [...pokemonsView]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      searchText\n    } = this.props;\n    const {\n      pokemons\n    } = this.state;\n\n    if (prevState.pokemons !== pokemons) {\n      sessionStorage.setItem('pokemons', JSON.stringify(pokemons));\n    }\n\n    if (prevProps.searchText !== searchText) {\n      let searched = null;\n\n      if (searchText !== '') {\n        searched = pokemons.filter(pokemon => pokemon.name.toLowerCase().startsWith(searchText));\n      }\n\n      this.setState({\n        searchedPokemon: searched ? [...searched] : null\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    sessionStorage.clear();\n  }\n\n  setNewPagination(newPage) {\n    const {\n      pokemons,\n      pokemonsPerPage\n    } = this.state;\n    const indexOfFirstPokemon = (newPage - 1) * pokemonsPerPage;\n    const indexOfLastPokemon = indexOfFirstPokemon + pokemonsPerPage;\n    const newSet = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n    this.setState({\n      pokemonsView: [...newSet],\n      currentPage: newPage\n    });\n  }\n\n  render() {\n    const {\n      pokemonsView,\n      searchedPokemon,\n      loading\n    } = this.state;\n    const {\n      theme\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FaSpinner, {\n        size: 50,\n        color: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Carregando\"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      pokemons: searchedPokemon || pokemonsView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Pagination, {\n      theme: theme.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handlePreviousPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Retroceder\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleNextPage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Avan\\xE7ar\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  searchText: state.productList,\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["C:/Users/User/gamagit-Copia/src/pages/index.js"],"names":["React","Component","connect","FaSpinner","swal","Container","Loading","Pagination","getPokemonsOfType","Cart","ProductList","Checkout","state","pokemons","pokemonsView","currentPage","pokemonsPerPage","searchedPokemon","loading","handleNextPage","lastPage","Math","ceil","length","newPage","setNewPagination","handlePreviousPage","componentDidMount","theme","props","items","JSON","parse","sessionStorage","getItem","error","text","buttons","cancel","indexOfLastPokemon","indexOfFirstPokemon","slice","setState","componentDidUpdate","prevProps","prevState","searchText","setItem","stringify","searched","filter","pokemon","name","toLowerCase","startsWith","componentWillUnmount","clear","newSet","render","color","mapStateToProps","productList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaSpinner } from 'react-icons/fa';\r\nimport swal from '@sweetalert/with-react';\r\nimport { Container, Loading, Pagination } from './style';\r\nimport { getPokemonsOfType } from '../../services/PokemonService';\r\nimport Cart from '../components/Cart';\r\nimport ProductList from '../components/';\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    pokemons: [],\r\n    pokemonsView: [],\r\n    currentPage: 1,\r\n    pokemonsPerPage: 6,\r\n    searchedPokemon: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { pokemons, currentPage, pokemonsPerPage } = this.state;\r\n    const { theme } = this.props;\r\n\r\n    let items = JSON.parse(sessionStorage.getItem('pokemons'));\r\n\r\n    if (!items) {\r\n      try {\r\n        items = await getPokemonsOfType(theme.theme);\r\n      } catch (error) {\r\n        swal({\r\n          text:\r\n            'Não foi possível capturar todos os Pokemon, por favor, atualize a página e tente novamente',\r\n          buttons: {\r\n            cancel: 'Close',\r\n          },\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage;\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    const pokemonsView = items.slice(indexOfFirstPokemon, indexOfLastPokemon);\r\n\r\n    this.setState({\r\n      pokemons: [...pokemons, ...items],\r\n      loading: false,\r\n      pokemonsView: [...pokemonsView],\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchText } = this.props;\r\n    const { pokemons } = this.state;\r\n\r\n    if (prevState.pokemons !== pokemons) {\r\n      sessionStorage.setItem('pokemons', JSON.stringify(pokemons));\r\n    }\r\n\r\n    if (prevProps.searchText !== searchText) {\r\n      let searched = null;\r\n\r\n      if (searchText !== '') {\r\n        searched = pokemons.filter((pokemon) =>\r\n          pokemon.name.toLowerCase().startsWith(searchText)\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        searchedPokemon: searched ? [...searched] : null,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  setNewPagination(newPage) {\r\n    const { pokemons, pokemonsPerPage } = this.state;\r\n\r\n    const indexOfFirstPokemon = (newPage - 1) * pokemonsPerPage;\r\n    const indexOfLastPokemon = indexOfFirstPokemon + pokemonsPerPage;\r\n    const newSet = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\r\n\r\n    this.setState({\r\n      pokemonsView: [...newSet],\r\n      currentPage: newPage,\r\n    });\r\n  }\r\n\r\n  handleNextPage = () => {\r\n    const { currentPage, pokemons, pokemonsPerPage } = this.state;\r\n    const lastPage = Math.ceil(pokemons.length / pokemonsPerPage);\r\n    const newPage = currentPage === lastPage ? lastPage : currentPage + 1;\r\n    this.setNewPagination(newPage);\r\n  };\r\n\r\n  handlePreviousPage = () => {\r\n    const { currentPage } = this.state;\r\n    const newPage = currentPage === 1 ? 1 : currentPage - 1;\r\n    this.setNewPagination(newPage);\r\n  };\r\n\r\n  render() {\r\n    const { pokemonsView, searchedPokemon, loading } = this.state;\r\n    const { theme } = this.props;\r\n\r\n    if (loading) {\r\n      return (\r\n        <Loading>\r\n          <FaSpinner size={50} color=\"#fff\">\r\n            Carregando\r\n          </FaSpinner>\r\n        </Loading>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <ProductList pokemons={searchedPokemon || pokemonsView} />\r\n          <Cart />\r\n        </Container>\r\n        <Pagination theme={theme.color}>\r\n          <button type=\"button\" onClick={() => this.handlePreviousPage()}>\r\n            <span>Retroceder</span>\r\n          </button>\r\n          <button type=\"button\" onClick={() => this.handleNextPage()}>\r\n            <span>Avançar</span>\r\n          </button>\r\n        </Pagination>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchText: state.productList,\r\n  theme: state.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Checkout);"]},"metadata":{},"sourceType":"module"}