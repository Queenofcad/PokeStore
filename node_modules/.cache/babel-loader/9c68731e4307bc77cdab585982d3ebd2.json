{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\User\\\\PokeStore\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\User\\\\PokeStore\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import api from'./Api';import{Capitalize,formatPrice}from'../util/format';var createPokemons=function createPokemons(_ref){var id=_ref.id,name=_ref.name,imageUrl=_ref.imageUrl,price=_ref.price;return{id:id,name:Capitalize(name),imageUrl:imageUrl,price:price,priceFormatted:formatPrice(price)};};export function getPokemonsFromApi(_x){return _getPokemonsFromApi.apply(this,arguments);}function _getPokemonsFromApi(){_getPokemonsFromApi=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(urls){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.get(urls);case 2:response=_context.sent;return _context.abrupt(\"return\",response.map(function(pokemon){return createPokemons({id:pokemon.data.id,name:pokemon.data.name,imageUrl:pokemon.data.sprites.front_default||\"\".concat(process.env.PUBLIC_URL,\"/assets/images/guest.jpg\"),price:Math.random()*100});}));case 4:case\"end\":return _context.stop();}}},_callee);}));return _getPokemonsFromApi.apply(this,arguments);}export function getPokemonsOfType(_x2){return _getPokemonsOfType.apply(this,arguments);}function _getPokemonsOfType(){_getPokemonsOfType=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type){var pokemons,_yield$api$getType,data,urls;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.getType('/type',type);case 3:_yield$api$getType=_context2.sent;data=_yield$api$getType.data;urls=data.pokemon.map(function(result){return result.pokemon.url;});_context2.next=8;return getPokemonsFromApi(urls);case 8:pokemons=_context2.sent;_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);throw new Error(_context2.t0);case 14:return _context2.abrupt(\"return\",pokemons);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return _getPokemonsOfType.apply(this,arguments);}","map":{"version":3,"sources":["C:/Users/User/PokeStore/src/services/PokemonService.js"],"names":["api","Capitalize","formatPrice","createPokemons","id","name","imageUrl","price","priceFormatted","getPokemonsFromApi","urls","get","response","map","pokemon","data","sprites","front_default","process","env","PUBLIC_URL","Math","random","getPokemonsOfType","type","getType","result","url","pokemons","Error"],"mappings":"ySAAA,MAAOA,CAAAA,GAAP,KAAgB,OAAhB,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,gBAAxC,CAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,UAAGC,CAAAA,EAAH,MAAGA,EAAH,CAAOC,IAAP,MAAOA,IAAP,CAAaC,QAAb,MAAaA,QAAb,CAAuBC,KAAvB,MAAuBA,KAAvB,OAAoC,CACzDH,EAAE,CAAFA,EADyD,CAEzDC,IAAI,CAAEJ,UAAU,CAACI,IAAD,CAFyC,CAGzDC,QAAQ,CAARA,QAHyD,CAIzDC,KAAK,CAALA,KAJyD,CAKzDC,cAAc,CAAEN,WAAW,CAACK,KAAD,CAL8B,CAApC,EAAvB,CAQA,eAAsBE,CAAAA,kBAAtB,uD,2GAAO,iBAAkCC,IAAlC,qJACkBV,CAAAA,GAAG,CAACW,GAAJ,CAAQD,IAAR,CADlB,QACCE,QADD,+CAEEA,QAAQ,CAACC,GAAT,CAAa,SAACC,OAAD,QAClBX,CAAAA,cAAc,CAAC,CACbC,EAAE,CAAEU,OAAO,CAACC,IAAR,CAAaX,EADJ,CAEbC,IAAI,CAAES,OAAO,CAACC,IAAR,CAAaV,IAFN,CAGbC,QAAQ,CAAEQ,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBC,aAArB,YAAyCC,OAAO,CAACC,GAAR,CAAYC,UAArD,4BAHG,CAIbb,KAAK,CAAEc,IAAI,CAACC,MAAL,GAAgB,GAJV,CAAD,CADI,EAAb,CAFF,wD,qDAYP,eAAsBC,CAAAA,iBAAtB,uD,yGAAO,kBAAiCC,IAAjC,wMAIoBxB,CAAAA,GAAG,CAACyB,OAAJ,CAAY,OAAZ,CAAqBD,IAArB,CAJpB,0CAIKT,IAJL,oBAIKA,IAJL,CAKGL,IALH,CAKUK,IAAI,CAACD,OAAL,CAAaD,GAAb,CAAiB,SAACa,MAAD,QAAYA,CAAAA,MAAM,CAACZ,OAAP,CAAea,GAA3B,EAAjB,CALV,wBAMclB,CAAAA,kBAAkB,CAACC,IAAD,CANhC,QAMHkB,QANG,0GAQG,IAAIC,CAAAA,KAAJ,cARH,0CAWED,QAXF,yE","sourcesContent":["import api from './Api';\r\nimport { Capitalize, formatPrice } from '../util/format';\r\n\r\n\r\nconst createPokemons = ({ id, name, imageUrl, price }) => ({\r\n  id,\r\n  name: Capitalize(name),\r\n  imageUrl,\r\n  price,\r\n  priceFormatted: formatPrice(price),\r\n});\r\n\r\nexport async function getPokemonsFromApi(urls) {\r\n  const response = await api.get(urls);\r\n  return response.map((pokemon) =>\r\n    createPokemons({\r\n      id: pokemon.data.id,\r\n      name: pokemon.data.name,\r\n      imageUrl: pokemon.data.sprites.front_default || `${process.env.PUBLIC_URL}/assets/images/guest.jpg`,\r\n      price: Math.random() * 100,\r\n    })\r\n  );\r\n}\r\n\r\nexport async function getPokemonsOfType(type) {\r\n  let pokemons;\r\n\r\n  try {\r\n    const { data } = await api.getType('/type', type);\r\n    const urls = data.pokemon.map((result) => result.pokemon.url);\r\n    pokemons = await getPokemonsFromApi(urls);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n\r\n  return pokemons;\r\n}"]},"metadata":{},"sourceType":"module"}