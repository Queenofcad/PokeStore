{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\gamagit\\\\src\\\\Home.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport * as S from './StyledHome';\nimport { useHistory } from 'react-router-dom';\n\nfunction App(props) {\n  const history = useHistory();\n  const [pokemon, setUsuario] = useState('');\n  const [erro, setErro] = useState(false);\n\n  function handlePesquisa() {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/{pokemon}`).then(response => {\n      const repositories = response.data;\n      const repositoriesName = [];\n      repositories.map(repository => {\n        repositoriesName.push(repository.name);\n      });\n      localStorage.setItem('repositoriesName', JSON.stringify(repositoriesName));\n      setErro(false);\n      history.push('/repositories');\n    }).catch(err => {\n      setErro(true);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(S.HomeContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(S.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.Input, {\n    className: \"usuarioInput\",\n    placeholder: \"Pokemon\",\n    value: pokemon,\n    onChange: e => setUsuario(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(S.Button, {\n    type: \"button\",\n    onClick: handlePesquisa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), erro ? /*#__PURE__*/React.createElement(S.ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }\n  }, \"Ocorreu um erro. Tente novamente.\") : '');\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/gamagit/src/Home.js"],"names":["React","useState","axios","S","useHistory","App","props","history","pokemon","setUsuario","erro","setErro","handlePesquisa","get","then","response","repositories","data","repositoriesName","map","repository","push","name","localStorage","setItem","JSON","stringify","catch","err","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAAEI,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASW,cAAT,GAA0B;AACxBV,IAAAA,KAAK,CAACW,GAAN,CAAW,6CAAX,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;AACA,YAAMC,gBAAgB,GAAG,EAAzB;AACAF,MAAAA,YAAY,CAACG,GAAb,CAAkBC,UAAD,IAAgB;AAC/BF,QAAAA,gBAAgB,CAACG,IAAjB,CAAsBD,UAAU,CAACE,IAAjC;AACD,OAFD;AAGAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAeR,gBAAf,CAAzC;AACAP,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAJ,MAAAA,OAAO,CAACc,IAAR,CAAa,eAAb;AACD,KAVH,EAWGM,KAXH,CAWSC,GAAG,IAAI;AACZjB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAbH;AAcD;;AAED,sBACE,oBAAC,CAAD,CAAG,aAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,KAAH;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAkC,IAAA,WAAW,EAAC,SAA9C;AAAwD,IAAA,KAAK,EAAEH,OAA/D;AAAwE,IAAA,QAAQ,EAAEqB,CAAC,IAAIpB,UAAU,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,CAAD,CAAG,MAAH;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEnB,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,EAKIF,IAAI,gBAAG,oBAAC,CAAD,CAAG,QAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAH,GAAgE,EALxE,CADF;AASD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as S from './StyledHome';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction App(props) {\r\n  const history = useHistory();\r\n  const [ pokemon, setUsuario ] = useState('');\r\n  const [ erro, setErro ] = useState(false);\r\n\r\n  function handlePesquisa() {\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/{pokemon}`)\r\n      .then(response => {\r\n        const repositories = response.data;\r\n        const repositoriesName = [];\r\n        repositories.map((repository) => {\r\n          repositoriesName.push(repository.name);\r\n        });\r\n        localStorage.setItem('repositoriesName', JSON.stringify(repositoriesName));\r\n        setErro(false);\r\n        history.push('/repositories');\r\n      })\r\n      .catch(err => {\r\n        setErro(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <S.HomeContainer>\r\n      <S.Content>\r\n        <S.Input className=\"usuarioInput\" placeholder=\"Pokemon\" value={pokemon} onChange={e => setUsuario(e.target.value)} />\r\n        <S.Button type=\"button\" onClick={handlePesquisa}>Pesquisar</S.Button>\r\n      </S.Content>\r\n      { erro ? <S.ErrorMsg>Ocorreu um erro. Tente novamente.</S.ErrorMsg> : '' }\r\n    </S.HomeContainer>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}