{"ast":null,"code":"import api from './';\nimport { Capitalize, formatPrice } from '../util/format';\n\nconst createPokemons = ({\n  id,\n  name,\n  imageUrl,\n  price\n}) => ({\n  id,\n  name: Capitalize(name),\n  imageUrl,\n  price,\n  priceFormatted: formatPrice(price)\n});\n\nexport async function getPokemonsFromApi(urls) {\n  const response = await api.get(urls);\n  return response.map(pokemon => createPokemons({\n    id: pokemon.data.id,\n    name: pokemon.data.name,\n    imageUrl: pokemon.data.sprites.front_default || `${process.env.PUBLIC_URL}/assets/images/guest.jpg`,\n    price: Math.random() * 100\n  }));\n}\nexport async function getPokemonsOfType(type) {\n  let pokemons;\n\n  try {\n    const {\n      data\n    } = await api.getType('/type', type);\n    const urls = data.pokemon.map(result => result.pokemon.url);\n    pokemons = await getPokemonsFromApi(urls);\n  } catch (error) {\n    throw new Error(error);\n  }\n\n  return pokemons;\n}","map":{"version":3,"sources":["C:/Users/User/gamagit-Copia/src/services/PokemonService.js"],"names":["api","Capitalize","formatPrice","createPokemons","id","name","imageUrl","price","priceFormatted","getPokemonsFromApi","urls","response","get","map","pokemon","data","sprites","front_default","process","env","PUBLIC_URL","Math","random","getPokemonsOfType","type","pokemons","getType","result","url","error","Error"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,IAAhB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,gBAAxC;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,MAAoC;AACzDH,EAAAA,EADyD;AAEzDC,EAAAA,IAAI,EAAEJ,UAAU,CAACI,IAAD,CAFyC;AAGzDC,EAAAA,QAHyD;AAIzDC,EAAAA,KAJyD;AAKzDC,EAAAA,cAAc,EAAEN,WAAW,CAACK,KAAD;AAL8B,CAApC,CAAvB;;AAQA,OAAO,eAAeE,kBAAf,CAAkCC,IAAlC,EAAwC;AAC7C,QAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAJ,CAAQF,IAAR,CAAvB;AACA,SAAOC,QAAQ,CAACE,GAAT,CAAcC,OAAD,IAClBX,cAAc,CAAC;AACbC,IAAAA,EAAE,EAAEU,OAAO,CAACC,IAAR,CAAaX,EADJ;AAEbC,IAAAA,IAAI,EAAES,OAAO,CAACC,IAAR,CAAaV,IAFN;AAGbC,IAAAA,QAAQ,EAAEQ,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBC,aAArB,IAAuC,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,0BAH7D;AAIbb,IAAAA,KAAK,EAAEc,IAAI,CAACC,MAAL,KAAgB;AAJV,GAAD,CADT,CAAP;AAQD;AAED,OAAO,eAAeC,iBAAf,CAAiCC,IAAjC,EAAuC;AAC5C,MAAIC,QAAJ;;AAEA,MAAI;AACF,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMf,GAAG,CAAC0B,OAAJ,CAAY,OAAZ,EAAqBF,IAArB,CAAvB;AACA,UAAMd,IAAI,GAAGK,IAAI,CAACD,OAAL,CAAaD,GAAb,CAAkBc,MAAD,IAAYA,MAAM,CAACb,OAAP,CAAec,GAA5C,CAAb;AACAH,IAAAA,QAAQ,GAAG,MAAMhB,kBAAkB,CAACC,IAAD,CAAnC;AACD,GAJD,CAIE,OAAOmB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;;AAED,SAAOJ,QAAP;AACD","sourcesContent":["import api from './';\r\nimport { Capitalize, formatPrice } from '../util/format';\r\n\r\n\r\nconst createPokemons = ({ id, name, imageUrl, price }) => ({\r\n  id,\r\n  name: Capitalize(name),\r\n  imageUrl,\r\n  price,\r\n  priceFormatted: formatPrice(price),\r\n});\r\n\r\nexport async function getPokemonsFromApi(urls) {\r\n  const response = await api.get(urls);\r\n  return response.map((pokemon) =>\r\n    createPokemons({\r\n      id: pokemon.data.id,\r\n      name: pokemon.data.name,\r\n      imageUrl: pokemon.data.sprites.front_default || `${process.env.PUBLIC_URL}/assets/images/guest.jpg`,\r\n      price: Math.random() * 100,\r\n    })\r\n  );\r\n}\r\n\r\nexport async function getPokemonsOfType(type) {\r\n  let pokemons;\r\n\r\n  try {\r\n    const { data } = await api.getType('/type', type);\r\n    const urls = data.pokemon.map((result) => result.pokemon.url);\r\n    pokemons = await getPokemonsFromApi(urls);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n\r\n  return pokemons;\r\n}"]},"metadata":{},"sourceType":"module"}