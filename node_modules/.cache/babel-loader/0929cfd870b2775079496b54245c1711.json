{"ast":null,"code":"import produce from 'immer';\nexport default function cart(state = [], action = '') {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return produce(state, draft => {\n        const productIndex = state.findIndex(e => e.id === action.product.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount += 1;\n        } else {\n          draft.push({ ...action.product,\n            amount: 1\n          });\n        }\n      });\n\n    case 'REMOVE_FROM_CART':\n      return produce(state, draft => {\n        const productIndex = state.findIndex(e => e.id === action.id);\n\n        if (draft[productIndex].amount === 1) {\n          draft.splice(productIndex, 1);\n        } else {\n          draft[productIndex].amount -= 1;\n        }\n      });\n\n    case 'FINISHED':\n      return [];\n\n    default:\n      const cart = JSON.parse(sessionStorage.getItem('cart'));\n      return cart || state;\n  }\n}","map":{"version":3,"sources":["C:/Users/User/gamagit-Copia/src/store/modules/Cart/Reduces.js"],"names":["produce","cart","state","action","type","draft","productIndex","findIndex","e","id","product","amount","push","splice","JSON","parse","sessionStorage","getItem"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAAM,GAAG,EAAnC,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOJ,OAAO,CAACE,KAAD,EAASG,KAAD,IAAW;AAC/B,cAAMC,YAAY,GAAGJ,KAAK,CAACK,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,OAAP,CAAeD,EAA/C,CAArB;;AAEA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBD,UAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,IAA8B,CAA9B;AACD,SAFD,MAEO;AACLN,UAAAA,KAAK,CAACO,IAAN,CAAW,EAAE,GAAGT,MAAM,CAACO,OAAZ;AAAqBC,YAAAA,MAAM,EAAE;AAA7B,WAAX;AACD;AACF,OARa,CAAd;;AAUF,SAAK,kBAAL;AACE,aAAOX,OAAO,CAACE,KAAD,EAASG,KAAD,IAAW;AAC/B,cAAMC,YAAY,GAAGJ,KAAK,CAACK,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAAvC,CAArB;;AAEA,YAAIJ,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,KAA+B,CAAnC,EAAsC;AACpCN,UAAAA,KAAK,CAACQ,MAAN,CAAaP,YAAb,EAA2B,CAA3B;AACD,SAFD,MAEO;AACLD,UAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,IAA8B,CAA9B;AACD;AACF,OARa,CAAd;;AAUF,SAAK,UAAL;AACE,aAAO,EAAP;;AAEF;AACE,YAAMV,IAAI,GAAGa,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAb;AACA,aAAOhB,IAAI,IAAIC,KAAf;AA5BJ;AA8BD","sourcesContent":["import produce from 'immer';\r\n\r\nexport default function cart(state = [], action = '') {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      return produce(state, (draft) => {\r\n        const productIndex = state.findIndex((e) => e.id === action.product.id);\r\n\r\n        if (productIndex >= 0) {\r\n          draft[productIndex].amount += 1;\r\n        } else {\r\n          draft.push({ ...action.product, amount: 1 });\r\n        }\r\n      });\r\n\r\n    case 'REMOVE_FROM_CART':\r\n      return produce(state, (draft) => {\r\n        const productIndex = state.findIndex((e) => e.id === action.id);\r\n\r\n        if (draft[productIndex].amount === 1) {\r\n          draft.splice(productIndex, 1);\r\n        } else {\r\n          draft[productIndex].amount -= 1;\r\n        }\r\n      });\r\n\r\n    case 'FINISHED':\r\n      return [];\r\n\r\n    default:\r\n      const cart = JSON.parse(sessionStorage.getItem('cart'));\r\n      return cart || state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}